{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red56\green185\blue199;\red57\green192\blue38;
\red57\green164\blue40;\red55\green239\blue32;\red63\green151\blue253;\red209\green113\blue37;\red202\green51\blue35;
\red86\green32\blue244;\red184\green51\blue37;\red252\green50\blue32;\red78\green36\blue194;}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c25544\c77008\c82022;\cssrgb\c25704\c77963\c19556;
\cssrgb\c26425\c68732\c20500;\cssrgb\c22317\c93015\c16432;\cssrgb\c29888\c66838\c99559;\cssrgb\c85991\c52029\c18734;\cssrgb\c83898\c28665\c18024;
\cssrgb\c41680\c25960\c96645;\cssrgb\c77738\c28163\c18923;\cssrgb\c100000\c29541\c16201;\cssrgb\c38282\c24768\c80485;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 (py3Env) (base) yotsugi:dojo_ninjas_proj aki$ python manage.py makemigrations\

\f1\b \cf3 Migrations for 'dojo_ninjas_app':
\f0\b0 \cf2 \
  
\f1\b dojo_ninjas_app/migrations/0001_initial.py
\f0\b0 \
    - Create model Dojos\
    - Create model Ninjas\
(py3Env) (base) yotsugi:dojo_ninjas_proj aki$ python manage.py migrate\

\f1\b \cf3 Operations to perform:
\f0\b0 \cf2 \

\f1\b   Apply all migrations: 
\f0\b0 admin, auth, contenttypes, dojo_ninjas_app, sessions\

\f1\b \cf3 Running migrations:
\f0\b0 \cf2 \
  Applying contenttypes.0001_initial...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0001_initial...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying admin.0001_initial...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying admin.0002_logentry_remove_auto_add...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying admin.0003_logentry_add_action_flag_choices...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying contenttypes.0002_remove_content_type_name...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0002_alter_permission_name_max_length...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0003_alter_user_email_max_length...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0004_alter_user_username_opts...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0005_alter_user_last_login_null...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0006_require_contenttypes_0002...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0007_alter_validators_add_error_messages...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0008_alter_user_username_max_length...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0009_alter_user_last_name_max_length...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0010_alter_group_name_max_length...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying auth.0011_update_proxy_permissions...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying dojo_ninjas_app.0001_initial...
\f1\b \cf4  OK
\f0\b0 \cf2 \
  Applying sessions.0001_initial...
\f1\b \cf4  OK
\f0\b0 \cf2 \
(py3Env) (base) yotsugi:dojo_ninjas_proj aki$ \
(py3Env) (base) yotsugi:dojo_ninjas_proj aki$ python manage.py shell\
/opt/miniconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py:925: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\
  warn("Attempting to work in a virtualenv. If you encounter problems, please "\
Python 3.7.4 (default, Aug 13 2019, 15:17:50) \
Type 'copyright', 'credits' or 'license' for more information\
IPython 7.11.1 -- An enhanced Interactive Python. Type '?' for help.\
\
\cf5 In [
\f1\b \cf6 1
\f0\b0 \cf5 ]: 
\f1\b from
\f0\b0 \cf2  
\f1\b \cf7 dojo_ninjas_app.models
\f0\b0 \cf2  
\f1\b \cf5 import
\f0\b0 \cf2  *                                                                                                                                                                \
\
\cf5 In [
\f1\b \cf6 2
\f0\b0 \cf5 ]: \cf2 first_dojo = Dojo.objects.create(name=\cf8 "nintama_dojo"\cf2 ,city=\cf8 "Silicon Valley"\cf2 ,state=\cf8 "CA"\cf2 )                                                                                                              \
\cf9 ---------------------------------------------------------------------------\cf2 \
\cf9 NameError\cf2                                  Traceback (most recent call last)\
\cf4 <ipython-input-2-b5994ffb21fe>\cf2  in \cf3 <module>\cf2 \
\cf4 ----> 1\cf9  \cf2 first_dojo \cf10 =\cf2  Dojo\cf10 .\cf2 objects\cf10 .\cf2 create\cf10 (\cf2 name\cf10 ="nintama_dojo",\cf2 city\cf10 ="Silicon Valley",\cf2 state\cf10 ="CA")\cf2 \
\
\cf9 NameError\cf2 : name 'Dojo' is not defined\
\
\cf5 In [
\f1\b \cf6 3
\f0\b0 \cf5 ]: \cf2 first_dojo = Dojos.objects.create(name=\cf8 "nintama_dojo"\cf2 ,city=\cf8 "Silicon Valley"\cf2 ,state=\cf8 "CA"\cf2 )                                                                                                             \
\cf5    ...: \cf2   \
\cf5    ...: \cf2 --------------------------------------------------------------------------- \
\cf5    ...: \cf2                                                                                                                                                                                                     \
\cf3   File \cf4 "<ipython-input-3-eeb3a06f48ee>"\cf3 , line \cf4 2\cf2 \
\cf9     ---------------------------------------------------------------------------\cf2 \
                                                                               ^\
\cf9 SyntaxError:\cf2  invalid syntax\
\
\
\cf5 In [
\f1\b \cf6 4
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                 \
\cf11 Out[
\f1\b \cf12 4
\f0\b0 \cf11 ]: \cf2 <QuerySet []>\
\
\cf5 In [
\f1\b \cf6 5
\f0\b0 \cf5 ]: \cf2 first_dojo = Dojos.objects.create(name=\cf8 "nintama_dijo"\cf2 , city=\cf8 "Silicon Valley"\cf2 , state=\cf8 "CA"\cf2 )                                                                                                           \
\
\cf5 In [
\f1\b \cf6 6
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                 \
\cf11 Out[
\f1\b \cf12 6
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Dojos: Dojos object (1)>]>\
\
\cf5 In [
\f1\b \cf6 7
\f0\b0 \cf5 ]: \cf2 second_dojo = Dojos.objects.create(name=\cf8 "jyokyu_dojo"\cf2 , city=\cf8 "Seattle"\cf2 , state=WA)                                                                                                                    \
\cf9 ---------------------------------------------------------------------------\cf2 \
\cf9 NameError\cf2                                  Traceback (most recent call last)\
\cf4 <ipython-input-7-32d274785ec8>\cf2  in \cf3 <module>\cf2 \
\cf4 ----> 1\cf9  \cf2 second_dojo \cf10 =\cf2  Dojos\cf10 .\cf2 objects\cf10 .\cf2 create\cf10 (\cf2 name\cf10 ="jyokyu_dojo",\cf2  city\cf10 ="Seattle",\cf2  state\cf10 =\cf2 WA\cf10 )\cf2 \
\
\cf9 NameError\cf2 : name 'WA' is not defined\
\
\cf5 In [
\f1\b \cf6 8
\f0\b0 \cf5 ]: \cf2 second_dojo = Dojos.objects.create(name=\cf8 "jyokyu_dojo"\cf2 , city=\cf8 "Seattle"\cf2 , state=\cf8 "WA"\cf2 )                                                                                                                  \
\
\cf5 In [
\f1\b \cf6 9
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                 \
\cf11 Out[
\f1\b \cf12 9
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Dojos: Dojos object (1)>, <Dojos: Dojos object (2)>]>\
\
\cf5 In [
\f1\b \cf6 10
\f0\b0 \cf5 ]: \cf2 third_dojo=Dojos.objects.create(name=\cf8 "maa_maa_dojo"\cf2 , city=\cf8 "tokyo"\cf2 , state=\cf8 "overseas/JP"\cf2 )                                                                                                            \
\
\cf5 In [
\f1\b \cf6 11
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                \
\cf11 Out[
\f1\b \cf12 11
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Dojos: Dojos object (1)>, <Dojos: Dojos object (2)>, <Dojos: Dojos object (3)>]>\
\
\cf5 In [
\f1\b \cf6 12
\f0\b0 \cf5 ]: \cf2 c = Dojos.objects.all()                                                                                                                                                                            \
\
\cf5 In [
\f1\b \cf6 13
\f0\b0 \cf5 ]: \cf2 c.delete()                                                                                                                                                                                         \
\cf11 Out[
\f1\b \cf12 13
\f0\b0 \cf11 ]: \cf2 (3, \{'dojo_ninjas_app.Ninjas': 0, 'dojo_ninjas_app.Dojos': 3\})\
\
\cf5 In [
\f1\b \cf6 14
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                \
\cf11 Out[
\f1\b \cf12 14
\f0\b0 \cf11 ]: \cf2 <QuerySet []>\
\
\cf5 In [
\f1\b \cf6 15
\f0\b0 \cf5 ]: \cf2 Dojos.objects.create(name =\cf8 "best_dojo"\cf2 , city = \cf8 "NY"\cf2 , state = \cf8 "NY"\cf2 )                                                                                                                                 \
\cf11 Out[
\f1\b \cf12 15
\f0\b0 \cf11 ]: \cf2 <Dojos: Dojos object (4)>\
\
\cf5 In [
\f1\b \cf6 16
\f0\b0 \cf5 ]: \cf2 Dojos.objects.create(name = \cf8 "ok_dojo"\cf2 , city = \cf8 "DC"\cf2 , state = \cf8 "DC"\cf2 )                                                                                                                                  \
\cf11 Out[
\f1\b \cf12 16
\f0\b0 \cf11 ]: \cf2 <Dojos: Dojos object (5)>\
\
\cf5 In [
\f1\b \cf6 17
\f0\b0 \cf5 ]: \cf2 Dojos.objects.create(name = \cf8 "fun_dojo"\cf2 , city = \cf8 "Sunnyvale"\cf2 , state = \cf8 "CA"\cf2 )                                                                                                                          \
\cf11 Out[
\f1\b \cf12 17
\f0\b0 \cf11 ]: \cf2 <Dojos: Dojos object (6)>\
\
\cf5 In [
\f1\b \cf6 18
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                \
\cf11 Out[
\f1\b \cf12 18
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Dojos: Dojos object (4)>, <Dojos: Dojos object (5)>, <Dojos: Dojos object (6)>]>\
\
\cf5 In [
\f1\b \cf6 19
\f0\b0 \cf5 ]: \cf2 Ninjas.objects.create(first_name =\cf8 "Akimi"\cf2 , last_name =\cf8 "Yano"\cf2 , dojo =\cf8 "best_dojo"\cf2 )                                                                                                                   \
\cf9 ---------------------------------------------------------------------------\cf2 \
\cf9 ValueError\cf2                                 Traceback (most recent call last)\
\cf4 <ipython-input-19-5472660b7a04>\cf2  in \cf3 <module>\cf2 \
\cf4 ----> 1\cf9  \cf2 Ninjas\cf10 .\cf2 objects\cf10 .\cf2 create\cf10 (\cf2 first_name \cf10 ="Akimi",\cf2  last_name \cf10 ="Yano",\cf2  dojo \cf10 ="best_dojo")\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/manager.py\cf2  in \cf3 manager_method\cf10 (self, *args, **kwargs)\cf2 \

\f1\b \cf4      80
\f0\b0 \cf2          \cf4 def\cf2  create_method\cf10 (\cf2 name\cf10 ,\cf2  method\cf10 ):\cf2 \

\f1\b \cf4      81
\f0\b0 \cf2              \cf4 def\cf2  manager_method\cf10 (\cf2 self\cf10 ,\cf2  \cf10 *\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 ):\cf2 \
\cf4 ---> 82\cf9                  \cf4 return\cf2  getattr\cf10 (\cf2 self\cf10 .\cf2 get_queryset\cf10 (),\cf2  name\cf10 )(*\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 )\cf2 \

\f1\b \cf4      83
\f0\b0 \cf2              manager_method\cf10 .\cf2 __name__ \cf10 =\cf2  method\cf10 .\cf2 __name__\

\f1\b \cf4      84
\f0\b0 \cf2              manager_method\cf10 .\cf2 __doc__ \cf10 =\cf2  method\cf10 .\cf2 __doc__\
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/query.py\cf2  in \cf3 create\cf10 (self, **kwargs)\cf2 \

\f1\b \cf4     418
\f0\b0 \cf2          \cf4 and\cf2  returning the created object\cf10 .\cf2 \

\f1\b \cf4     419
\f0\b0 \cf2          """\
\cf4 --> 420\cf9          \cf2 obj \cf10 =\cf2  self\cf10 .\cf2 model\cf10 (**\cf2 kwargs\cf10 )\cf2 \

\f1\b \cf4     421
\f0\b0 \cf2          self\cf10 .\cf2 _for_write \cf10 =\cf2  \cf4 True\cf2 \

\f1\b \cf4     422
\f0\b0 \cf2          obj\cf10 .\cf2 save\cf10 (\cf2 force_insert\cf10 =\cf4 True\cf10 ,\cf2  using\cf10 =\cf2 self\cf10 .\cf2 db\cf10 )\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/base.py\cf2  in \cf3 __init__\cf10 (self, *args, **kwargs)\cf2 \

\f1\b \cf4     481
\f0\b0 \cf2                  \cf9 # checked) by the RelatedObjectDescriptor.\cf2 \

\f1\b \cf4     482
\f0\b0 \cf2                  \cf4 if\cf2  rel_obj \cf4 is\cf2  \cf4 not\cf2  _DEFERRED\cf10 :\cf2 \
\cf4 --> 483\cf9                      \cf2 _setattr\cf10 (\cf2 self\cf10 ,\cf2  field\cf10 .\cf2 name\cf10 ,\cf2  rel_obj\cf10 )\cf2 \

\f1\b \cf4     484
\f0\b0 \cf2              \cf4 else\cf10 :\cf2 \

\f1\b \cf4     485
\f0\b0 \cf2                  \cf4 if\cf2  val \cf4 is\cf2  \cf4 not\cf2  _DEFERRED\cf10 :\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/fields/related_descriptors.py\cf2  in \cf3 __set__\cf10 (self, instance, value)\cf2 \

\f1\b \cf4     209
\f0\b0 \cf2                      instance\cf10 .\cf2 _meta\cf10 .\cf2 object_name\cf10 ,\cf2 \

\f1\b \cf4     210
\f0\b0 \cf2                      self\cf10 .\cf2 field\cf10 .\cf2 name\cf10 ,\cf2 \
\cf4 --> 211\cf9                      \cf2 self\cf10 .\cf2 field\cf10 .\cf2 remote_field\cf10 .\cf2 model\cf10 .\cf2 _meta\cf10 .\cf2 object_name\cf10 ,\cf2 \

\f1\b \cf4     212
\f0\b0 \cf2                  )\

\f1\b \cf4     213
\f0\b0 \cf2              )\
\
\cf9 ValueError\cf2 : Cannot assign "'best_dojo'": "Ninjas.dojo" must be a "Dojos" instance.\
\
\cf5 In [
\f1\b \cf6 20
\f0\b0 \cf5 ]: \cf2 first_ninja = Ninjas.objects.create(first_name =\cf8 "Akimi"\cf2 , last_name = \cf8 "Yano"\cf2 , dojo = first_dojo)                                                                                                    \
\cf9 ---------------------------------------------------------------------------\cf2 \
\cf9 IntegrityError\cf2                             Traceback (most recent call last)\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/utils.py\cf2  in \cf3 _execute\cf10 (self, sql, params, *ignored_wrapper_args)\cf2 \

\f1\b \cf4      83
\f0\b0 \cf2              \cf4 else\cf10 :\cf2 \
\cf4 ---> 84\cf9                  \cf4 return\cf2  self\cf10 .\cf2 cursor\cf10 .\cf2 execute\cf10 (\cf2 sql\cf10 ,\cf2  params\cf10 )\cf2 \

\f1\b \cf4      85
\f0\b0 \cf2  \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py\cf2  in \cf3 execute\cf10 (self, query, params)\cf2 \

\f1\b \cf4     382
\f0\b0 \cf2          query \cf10 =\cf2  self\cf10 .\cf2 convert_query\cf10 (\cf2 query\cf10 )\cf2 \
\cf4 --> 383\cf9          \cf4 return\cf2  Database\cf10 .\cf2 Cursor\cf10 .\cf2 execute\cf10 (\cf2 self\cf10 ,\cf2  query\cf10 ,\cf2  params\cf10 )\cf2 \

\f1\b \cf4     384
\f0\b0 \cf2  \
\
\cf9 IntegrityError\cf2 : FOREIGN KEY constraint failed\
\
The above exception was the direct cause of the following exception:\
\
\cf9 IntegrityError\cf2                             Traceback (most recent call last)\
\cf4 <ipython-input-20-27cbc7c9d0b7>\cf2  in \cf3 <module>\cf2 \
\cf4 ----> 1\cf9  \cf2 first_ninja \cf10 =\cf2  Ninjas\cf10 .\cf2 objects\cf10 .\cf2 create\cf10 (\cf2 first_name \cf10 ="Akimi",\cf2  last_name \cf10 =\cf2  \cf10 "Yano",\cf2  dojo \cf10 =\cf2  first_dojo\cf10 )\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/manager.py\cf2  in \cf3 manager_method\cf10 (self, *args, **kwargs)\cf2 \

\f1\b \cf4      80
\f0\b0 \cf2          \cf4 def\cf2  create_method\cf10 (\cf2 name\cf10 ,\cf2  method\cf10 ):\cf2 \

\f1\b \cf4      81
\f0\b0 \cf2              \cf4 def\cf2  manager_method\cf10 (\cf2 self\cf10 ,\cf2  \cf10 *\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 ):\cf2 \
\cf4 ---> 82\cf9                  \cf4 return\cf2  getattr\cf10 (\cf2 self\cf10 .\cf2 get_queryset\cf10 (),\cf2  name\cf10 )(*\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 )\cf2 \

\f1\b \cf4      83
\f0\b0 \cf2              manager_method\cf10 .\cf2 __name__ \cf10 =\cf2  method\cf10 .\cf2 __name__\

\f1\b \cf4      84
\f0\b0 \cf2              manager_method\cf10 .\cf2 __doc__ \cf10 =\cf2  method\cf10 .\cf2 __doc__\
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/query.py\cf2  in \cf3 create\cf10 (self, **kwargs)\cf2 \

\f1\b \cf4     420
\f0\b0 \cf2          obj \cf10 =\cf2  self\cf10 .\cf2 model\cf10 (**\cf2 kwargs\cf10 )\cf2 \

\f1\b \cf4     421
\f0\b0 \cf2          self\cf10 .\cf2 _for_write \cf10 =\cf2  \cf4 True\cf2 \
\cf4 --> 422\cf9          \cf2 obj\cf10 .\cf2 save\cf10 (\cf2 force_insert\cf10 =\cf4 True\cf10 ,\cf2  using\cf10 =\cf2 self\cf10 .\cf2 db\cf10 )\cf2 \

\f1\b \cf4     423
\f0\b0 \cf2          \cf4 return\cf2  obj\

\f1\b \cf4     424
\f0\b0 \cf2  \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/base.py\cf2  in \cf3 save\cf10 (self, force_insert, force_update, using, update_fields)\cf2 \

\f1\b \cf4     739
\f0\b0 \cf2  \

\f1\b \cf4     740
\f0\b0 \cf2          self.save_base(using=using, force_insert=force_insert,\
\cf4 --> 741\cf9                         force_update=force_update, update_fields=update_fields)\cf2 \

\f1\b \cf4     742
\f0\b0 \cf2      save\cf10 .\cf2 alters_data \cf10 =\cf2  \cf4 True\cf2 \

\f1\b \cf4     743
\f0\b0 \cf2  \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/base.py\cf2  in \cf3 save_base\cf10 (self, raw, force_insert, force_update, using, update_fields)\cf2 \

\f1\b \cf4     777
\f0\b0 \cf2              updated = self._save_table(\

\f1\b \cf4     778
\f0\b0 \cf2                  raw\cf10 ,\cf2  cls\cf10 ,\cf2  force_insert \cf4 or\cf2  parent_inserted\cf10 ,\cf2 \
\cf4 --> 779\cf9                  \cf2 force_update\cf10 ,\cf2  using\cf10 ,\cf2  update_fields\cf10 ,\cf2 \

\f1\b \cf4     780
\f0\b0 \cf2              )\

\f1\b \cf4     781
\f0\b0 \cf2          \cf9 # Store the database on which the object was saved\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/base.py\cf2  in \cf3 _save_table\cf10 (self, raw, cls, force_insert, force_update, using, update_fields)\cf2 \

\f1\b \cf4     868
\f0\b0 \cf2  \

\f1\b \cf4     869
\f0\b0 \cf2              update_pk \cf10 =\cf2  meta\cf10 .\cf2 auto_field \cf4 and\cf2  \cf4 not\cf2  pk_set\
\cf4 --> 870\cf9              \cf2 result \cf10 =\cf2  self\cf10 .\cf2 _do_insert\cf10 (\cf2 cls\cf10 .\cf2 _base_manager\cf10 ,\cf2  using\cf10 ,\cf2  fields\cf10 ,\cf2  update_pk\cf10 ,\cf2  raw\cf10 )\cf2 \

\f1\b \cf4     871
\f0\b0 \cf2              \cf4 if\cf2  update_pk\cf10 :\cf2 \

\f1\b \cf4     872
\f0\b0 \cf2                  setattr\cf10 (\cf2 self\cf10 ,\cf2  meta\cf10 .\cf2 pk\cf10 .\cf2 attname\cf10 ,\cf2  result\cf10 )\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/base.py\cf2  in \cf3 _do_insert\cf10 (self, manager, using, fields, update_pk, raw)\cf2 \

\f1\b \cf4     906
\f0\b0 \cf2          """\

\f1\b \cf4     907
\f0\b0 \cf2          return manager._insert([self], fields=fields, return_id=update_pk,\
\cf4 --> 908\cf9                                 using=using, raw=raw)\cf2 \

\f1\b \cf4     909
\f0\b0 \cf2  \

\f1\b \cf4     910
\f0\b0 \cf2      \cf4 def\cf2  delete\cf10 (\cf2 self\cf10 ,\cf2  using\cf10 =\cf4 None\cf10 ,\cf2  keep_parents\cf10 =\cf4 False\cf10 ):\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/manager.py\cf2  in \cf3 manager_method\cf10 (self, *args, **kwargs)\cf2 \

\f1\b \cf4      80
\f0\b0 \cf2          \cf4 def\cf2  create_method\cf10 (\cf2 name\cf10 ,\cf2  method\cf10 ):\cf2 \

\f1\b \cf4      81
\f0\b0 \cf2              \cf4 def\cf2  manager_method\cf10 (\cf2 self\cf10 ,\cf2  \cf10 *\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 ):\cf2 \
\cf4 ---> 82\cf9                  \cf4 return\cf2  getattr\cf10 (\cf2 self\cf10 .\cf2 get_queryset\cf10 (),\cf2  name\cf10 )(*\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 )\cf2 \

\f1\b \cf4      83
\f0\b0 \cf2              manager_method\cf10 .\cf2 __name__ \cf10 =\cf2  method\cf10 .\cf2 __name__\

\f1\b \cf4      84
\f0\b0 \cf2              manager_method\cf10 .\cf2 __doc__ \cf10 =\cf2  method\cf10 .\cf2 __doc__\
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/query.py\cf2  in \cf3 _insert\cf10 (self, objs, fields, return_id, raw, using, ignore_conflicts)\cf2 \

\f1\b \cf4    1184
\f0\b0 \cf2          query \cf10 =\cf2  sql\cf10 .\cf2 InsertQuery\cf10 (\cf2 self\cf10 .\cf2 model\cf10 ,\cf2  ignore_conflicts\cf10 =\cf2 ignore_conflicts\cf10 )\cf2 \

\f1\b \cf4    1185
\f0\b0 \cf2          query\cf10 .\cf2 insert_values\cf10 (\cf2 fields\cf10 ,\cf2  objs\cf10 ,\cf2  raw\cf10 =\cf2 raw\cf10 )\cf2 \
\cf4 -> 1186\cf9          \cf4 return\cf2  query\cf10 .\cf2 get_compiler\cf10 (\cf2 using\cf10 =\cf2 using\cf10 ).\cf2 execute_sql\cf10 (\cf2 return_id\cf10 )\cf2 \

\f1\b \cf4    1187
\f0\b0 \cf2      _insert\cf10 .\cf2 alters_data \cf10 =\cf2  \cf4 True\cf2 \

\f1\b \cf4    1188
\f0\b0 \cf2      _insert\cf10 .\cf2 queryset_only \cf10 =\cf2  \cf4 False\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/sql/compiler.py\cf2  in \cf3 execute_sql\cf10 (self, return_id)\cf2 \

\f1\b \cf4    1330
\f0\b0 \cf2          \cf4 with\cf2  self\cf10 .\cf2 connection\cf10 .\cf2 cursor\cf10 ()\cf2  \cf4 as\cf2  cursor\cf10 :\cf2 \

\f1\b \cf4    1331
\f0\b0 \cf2              \cf4 for\cf2  sql\cf10 ,\cf2  params \cf4 in\cf2  self\cf10 .\cf2 as_sql\cf10 ():\cf2 \
\cf4 -> 1332\cf9                  \cf2 cursor\cf10 .\cf2 execute\cf10 (\cf2 sql\cf10 ,\cf2  params\cf10 )\cf2 \

\f1\b \cf4    1333
\f0\b0 \cf2              \cf4 if\cf2  \cf4 not\cf2  return_id\cf10 :\cf2 \

\f1\b \cf4    1334
\f0\b0 \cf2                  \cf4 return\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/utils.py\cf2  in \cf3 execute\cf10 (self, sql, params)\cf2 \

\f1\b \cf4      97
\f0\b0 \cf2          start \cf10 =\cf2  time\cf10 ()\cf2 \

\f1\b \cf4      98
\f0\b0 \cf2          \cf4 try\cf10 :\cf2 \
\cf4 ---> 99\cf9              \cf4 return\cf2  super\cf10 ().\cf2 execute\cf10 (\cf2 sql\cf10 ,\cf2  params\cf10 )\cf2 \

\f1\b \cf4     100
\f0\b0 \cf2          \cf4 finally\cf10 :\cf2 \

\f1\b \cf4     101
\f0\b0 \cf2              stop \cf10 =\cf2  time\cf10 ()\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/utils.py\cf2  in \cf3 execute\cf10 (self, sql, params)\cf2 \

\f1\b \cf4      65
\f0\b0 \cf2  \

\f1\b \cf4      66
\f0\b0 \cf2      \cf4 def\cf2  execute\cf10 (\cf2 self\cf10 ,\cf2  sql\cf10 ,\cf2  params\cf10 =\cf4 None\cf10 ):\cf2 \
\cf4 ---> 67\cf9          \cf4 return\cf2  self\cf10 .\cf2 _execute_with_wrappers\cf10 (\cf2 sql\cf10 ,\cf2  params\cf10 ,\cf2  many\cf10 =\cf4 False\cf10 ,\cf2  executor\cf10 =\cf2 self\cf10 .\cf2 _execute\cf10 )\cf2 \

\f1\b \cf4      68
\f0\b0 \cf2  \

\f1\b \cf4      69
\f0\b0 \cf2      \cf4 def\cf2  executemany\cf10 (\cf2 self\cf10 ,\cf2  sql\cf10 ,\cf2  param_list\cf10 ):\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/utils.py\cf2  in \cf3 _execute_with_wrappers\cf10 (self, sql, params, many, executor)\cf2 \

\f1\b \cf4      74
\f0\b0 \cf2          \cf4 for\cf2  wrapper \cf4 in\cf2  reversed\cf10 (\cf2 self\cf10 .\cf2 db\cf10 .\cf2 execute_wrappers\cf10 ):\cf2 \

\f1\b \cf4      75
\f0\b0 \cf2              executor \cf10 =\cf2  functools\cf10 .\cf2 partial\cf10 (\cf2 wrapper\cf10 ,\cf2  executor\cf10 )\cf2 \
\cf4 ---> 76\cf9          \cf4 return\cf2  executor\cf10 (\cf2 sql\cf10 ,\cf2  params\cf10 ,\cf2  many\cf10 ,\cf2  context\cf10 )\cf2 \

\f1\b \cf4      77
\f0\b0 \cf2  \

\f1\b \cf4      78
\f0\b0 \cf2      \cf4 def\cf2  _execute\cf10 (\cf2 self\cf10 ,\cf2  sql\cf10 ,\cf2  params\cf10 ,\cf2  \cf10 *\cf2 ignored_wrapper_args\cf10 ):\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/utils.py\cf2  in \cf3 _execute\cf10 (self, sql, params, *ignored_wrapper_args)\cf2 \

\f1\b \cf4      82
\f0\b0 \cf2                  \cf4 return\cf2  self\cf10 .\cf2 cursor\cf10 .\cf2 execute\cf10 (\cf2 sql\cf10 )\cf2 \

\f1\b \cf4      83
\f0\b0 \cf2              \cf4 else\cf10 :\cf2 \
\cf4 ---> 84\cf9                  \cf4 return\cf2  self\cf10 .\cf2 cursor\cf10 .\cf2 execute\cf10 (\cf2 sql\cf10 ,\cf2  params\cf10 )\cf2 \

\f1\b \cf4      85
\f0\b0 \cf2  \

\f1\b \cf4      86
\f0\b0 \cf2      \cf4 def\cf2  _executemany\cf10 (\cf2 self\cf10 ,\cf2  sql\cf10 ,\cf2  param_list\cf10 ,\cf2  \cf10 *\cf2 ignored_wrapper_args\cf10 ):\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/utils.py\cf2  in \cf3 __exit__\cf10 (self, exc_type, exc_value, traceback)\cf2 \

\f1\b \cf4      87
\f0\b0 \cf2                  \cf4 if\cf2  dj_exc_type \cf4 not\cf2  \cf4 in\cf2  \cf10 (\cf2 DataError\cf10 ,\cf2  IntegrityError\cf10 ):\cf2 \

\f1\b \cf4      88
\f0\b0 \cf2                      self\cf10 .\cf2 wrapper\cf10 .\cf2 errors_occurred \cf10 =\cf2  \cf4 True\cf2 \
\cf4 ---> 89\cf9                  \cf4 raise\cf2  dj_exc_value\cf10 .\cf2 with_traceback\cf10 (\cf2 traceback\cf10 )\cf2  \cf4 from\cf2  exc_value\

\f1\b \cf4      90
\f0\b0 \cf2  \

\f1\b \cf4      91
\f0\b0 \cf2      \cf4 def\cf2  __call__\cf10 (\cf2 self\cf10 ,\cf2  func\cf10 ):\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/utils.py\cf2  in \cf3 _execute\cf10 (self, sql, params, *ignored_wrapper_args)\cf2 \

\f1\b \cf4      82
\f0\b0 \cf2                  \cf4 return\cf2  self\cf10 .\cf2 cursor\cf10 .\cf2 execute\cf10 (\cf2 sql\cf10 )\cf2 \

\f1\b \cf4      83
\f0\b0 \cf2              \cf4 else\cf10 :\cf2 \
\cf4 ---> 84\cf9                  \cf4 return\cf2  self\cf10 .\cf2 cursor\cf10 .\cf2 execute\cf10 (\cf2 sql\cf10 ,\cf2  params\cf10 )\cf2 \

\f1\b \cf4      85
\f0\b0 \cf2  \

\f1\b \cf4      86
\f0\b0 \cf2      \cf4 def\cf2  _executemany\cf10 (\cf2 self\cf10 ,\cf2  sql\cf10 ,\cf2  param_list\cf10 ,\cf2  \cf10 *\cf2 ignored_wrapper_args\cf10 ):\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py\cf2  in \cf3 execute\cf10 (self, query, params)\cf2 \

\f1\b \cf4     381
\f0\b0 \cf2              \cf4 return\cf2  Database\cf10 .\cf2 Cursor\cf10 .\cf2 execute\cf10 (\cf2 self\cf10 ,\cf2  query\cf10 )\cf2 \

\f1\b \cf4     382
\f0\b0 \cf2          query \cf10 =\cf2  self\cf10 .\cf2 convert_query\cf10 (\cf2 query\cf10 )\cf2 \
\cf4 --> 383\cf9          \cf4 return\cf2  Database\cf10 .\cf2 Cursor\cf10 .\cf2 execute\cf10 (\cf2 self\cf10 ,\cf2  query\cf10 ,\cf2  params\cf10 )\cf2 \

\f1\b \cf4     384
\f0\b0 \cf2  \

\f1\b \cf4     385
\f0\b0 \cf2      \cf4 def\cf2  executemany\cf10 (\cf2 self\cf10 ,\cf2  query\cf10 ,\cf2  param_list\cf10 ):\cf2 \
\
\cf9 IntegrityError\cf2 : FOREIGN KEY constraint failed\
\
\cf5 In [
\f1\b \cf6 21
\f0\b0 \cf5 ]: \cf2 c = Dojos.objects.all()                                                                                                                                                                            \
\
\cf5 In [
\f1\b \cf6 22
\f0\b0 \cf5 ]: \cf2 c.delete()                                                                                                                                                                                         \
\cf11 Out[
\f1\b \cf12 22
\f0\b0 \cf11 ]: \cf2 (3, \{'dojo_ninjas_app.Ninjas': 0, 'dojo_ninjas_app.Dojos': 3\})\
\
\cf5 In [
\f1\b \cf6 23
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                \
\cf11 Out[
\f1\b \cf12 23
\f0\b0 \cf11 ]: \cf2 <QuerySet []>\
\
\cf5 In [
\f1\b \cf6 24
\f0\b0 \cf5 ]: \cf2 new_dojo = Dojos.objects.create(name = \cf8 "Best Dojo Ever"\cf2 , city = \cf8 "San Jose"\cf2 , state = \cf8 "CA"\cf2 )                                                                                                          \
\
\cf5 In [
\f1\b \cf6 25
\f0\b0 \cf5 ]: \cf2 another_dojo = Dojos.objects.create(name = \cf8 "Okay One"\cf2 , city = \cf8 "Houston"\cf2 , state = \cf8 "TX"\cf2 )                                                                                                             \
\
\cf5 In [
\f1\b \cf6 26
\f0\b0 \cf5 ]: \cf2 last_dojo = Dojos.objects.create(name = \cf8 "Oasis"\cf2 , city = \cf8 "Seattle"\cf2 , state = \cf8 "WA"\cf2 )                                                                                                                   \
\
\cf5 In [
\f1\b \cf6 27
\f0\b0 \cf5 ]: \cf2 first_ninja = Ninjas.objects.create(first_name = \cf8 "Akimi"\cf2 , last_name = \cf8 "Yano"\cf2 , dojo = new_dojo)                                                                                                     \
\
\cf5 In [
\f1\b \cf6 28
\f0\b0 \cf5 ]: \cf2 second_ninja = Ninjas.objects.create(first_name =\cf8 "Yuta"\cf2 , last_name = \cf8 "M"\cf2 , dojo = new_dojo)                                                                                                         \
\
\cf5 In [
\f1\b \cf6 29
\f0\b0 \cf5 ]: \cf2 third_ninja = Ninjas.objects.create(first_name = \cf8 "Glen"\cf2 , last_name = \cf8 "L"\cf2 , dojo = new_dojo)                                                                                                         \
\
\cf5 In [
\f1\b \cf6 30
\f0\b0 \cf5 ]: \cf2 Ninjas.objects.all()                                                                                                                                                                               \
\cf11 Out[
\f1\b \cf12 30
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Ninjas: Ninjas object (1)>, <Ninjas: Ninjas object (2)>, <Ninjas: Ninjas object (3)>]>\
\
\cf5 In [
\f1\b \cf6 31
\f0\b0 \cf5 ]: \cf2 fourth_ninja = Ninjas.objects.create(first_name =\cf8 "Aka"\cf2 , last_name = \cf8 "W"\cf2 , dojo = another_dojo)                                                                                                      \
\
\cf5 In [
\f1\b \cf6 32
\f0\b0 \cf5 ]: \cf2 fifth_nionja = Ninjas.objects.create(first_name =\cf8 "Ryo"\cf2 , last_name = \cf8 "W"\cf2 , dojo = another_dojo)                                                                                                      \
\
\cf5 In [
\f1\b \cf6 33
\f0\b0 \cf5 ]: \cf2 sixth_ninja = Ninjas.objects.create(first_name =\cf8 "Sayaka"\cf2 , last_name = \cf8 "M"\cf2 , dojo = another_dojo)                                                                                                    \
\
\cf5 In [
\f1\b \cf6 34
\f0\b0 \cf5 ]: \cf2 tenth_ninja = Ninjas.objects.create(first_name =\cf8 "Ryoji"\cf2 , last_name = \cf8 "K"\cf2 , dojo = last_dojo)                                                                                                        \
\
\cf5 In [
\f1\b \cf6 35
\f0\b0 \cf5 ]: \cf2 ninth_ninja = Ninjas.objects.create(first_name =\cf8 "Rina"\cf2 , last_name = \cf8 "S"\cf2 , dojo = last_dojo)                                                                                                         \
\
\cf5 In [
\f1\b \cf6 36
\f0\b0 \cf5 ]: \cf2 eighth_ninja = Ninjas.objects.create(first_name = \cf8 "Saigon"\cf2 , last_name =\cf8 "Matsumoto"\cf2 , dojo = last_dojo)                                                                                              \
\
\cf5 In [
\f1\b \cf6 37
\f0\b0 \cf5 ]: \cf2 Dojos.objects.get(\cf5 id\cf2 =\cf5 1\cf2 ).dojo.all()                                                                                                                                                                 \
\cf9 ---------------------------------------------------------------------------\cf2 \
\cf9 DoesNotExist\cf2                               Traceback (most recent call last)\
\cf4 <ipython-input-37-d48ed54ea7f2>\cf2  in \cf3 <module>\cf2 \
\cf4 ----> 1\cf9  \cf2 Dojos\cf10 .\cf2 objects\cf10 .\cf2 get\cf10 (\cf2 id\cf10 =\cf3 1\cf10 ).\cf2 dojo\cf10 .\cf2 all\cf10 ()\cf2 \
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/manager.py\cf2  in \cf3 manager_method\cf10 (self, *args, **kwargs)\cf2 \

\f1\b \cf4      80
\f0\b0 \cf2          \cf4 def\cf2  create_method\cf10 (\cf2 name\cf10 ,\cf2  method\cf10 ):\cf2 \

\f1\b \cf4      81
\f0\b0 \cf2              \cf4 def\cf2  manager_method\cf10 (\cf2 self\cf10 ,\cf2  \cf10 *\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 ):\cf2 \
\cf4 ---> 82\cf9                  \cf4 return\cf2  getattr\cf10 (\cf2 self\cf10 .\cf2 get_queryset\cf10 (),\cf2  name\cf10 )(*\cf2 args\cf10 ,\cf2  \cf10 **\cf2 kwargs\cf10 )\cf2 \

\f1\b \cf4      83
\f0\b0 \cf2              manager_method\cf10 .\cf2 __name__ \cf10 =\cf2  method\cf10 .\cf2 __name__\

\f1\b \cf4      84
\f0\b0 \cf2              manager_method\cf10 .\cf2 __doc__ \cf10 =\cf2  method\cf10 .\cf2 __doc__\
\
\cf4 /opt/miniconda3/lib/python3.7/site-packages/django/db/models/query.py\cf2  in \cf3 get\cf10 (self, *args, **kwargs)\cf2 \

\f1\b \cf4     406
\f0\b0 \cf2              raise self.model.DoesNotExist(\

\f1\b \cf4     407
\f0\b0 \cf2                  \cf10 "%s matching query does not exist."\cf2  \cf10 %\cf2 \
\cf4 --> 408\cf9                  \cf2 self\cf10 .\cf2 model\cf10 .\cf2 _meta\cf10 .\cf2 object_name\

\f1\b \cf4     409
\f0\b0 \cf2              )\

\f1\b \cf4     410
\f0\b0 \cf2          raise self.model.MultipleObjectsReturned(\
\
\cf9 DoesNotExist\cf2 : Dojos matching query does not exist.\
\
\cf5 In [
\f1\b \cf6 38
\f0\b0 \cf5 ]: \cf2 new_dojo.dojo.all()                                                                                                                                                                                \
\cf11 Out[
\f1\b \cf12 38
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Ninjas: Ninjas object (1)>, <Ninjas: Ninjas object (2)>, <Ninjas: Ninjas object (3)>]>\
\
\cf5 In [
\f1\b \cf6 39
\f0\b0 \cf5 ]: \cf2 last_dojo.dojo.all()                                                                                                                                                                               \
\cf11 Out[
\f1\b \cf12 39
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Ninjas: Ninjas object (7)>, <Ninjas: Ninjas object (8)>, <Ninjas: Ninjas object (9)>]>\
\
\cf5 In [
\f1\b \cf6 40
\f0\b0 \cf5 ]: \cf2 eighth_ninja.dojo                                                                                                                                                                                  \
\cf11 Out[
\f1\b \cf12 40
\f0\b0 \cf11 ]: \cf2 <Dojos: Dojos object (9)>\
\
\cf5 In [
\f1\b \cf6 41
\f0\b0 \cf5 ]: \cf2 eighth_ninja.dojo.\cf13 __dict__\cf2                                                                                                                                                                          \
\cf11 Out[
\f1\b \cf12 41
\f0\b0 \cf11 ]: \cf2 \
\{'_state': <django.db.models.base.ModelState at 0x109eee250>,\
 'id': 9,\
 'name': 'Oasis',\
 'city': 'Seattle',\
 'state': 'WA',\
 'created_at': datetime.datetime(2020, 2, 12, 21, 10, 36, 819374, tzinfo=<UTC>),\
 'updated_at': datetime.datetime(2020, 2, 12, 21, 10, 36, 819417, tzinfo=<UTC>)\}\
\
\cf5 In [
\f1\b \cf6 42
\f0\b0 \cf5 ]: \cf2 exit()                                                                                                                                                                                             \
(py3Env) (base) yotsugi:dojo_ninjas_proj aki$ python manage.py makemigrations\

\f1\b \cf3 Migrations for 'dojo_ninjas_app':
\f0\b0 \cf2 \
  
\f1\b dojo_ninjas_app/migrations/0002_dojos_desc.py
\f0\b0 \
    - Add field desc to dojos\
(py3Env) (base) yotsugi:dojo_ninjas_proj aki$ python manage.py migrate\

\f1\b \cf3 Operations to perform:
\f0\b0 \cf2 \

\f1\b   Apply all migrations: 
\f0\b0 admin, auth, contenttypes, dojo_ninjas_app, sessions\

\f1\b \cf3 Running migrations:
\f0\b0 \cf2 \
  Applying dojo_ninjas_app.0002_dojos_desc...
\f1\b \cf4  OK
\f0\b0 \cf2 \
(py3Env) (base) yotsugi:dojo_ninjas_proj aki$ python manage.py shell\
/opt/miniconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py:925: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv.\
  warn("Attempting to work in a virtualenv. If you encounter problems, please "\
Python 3.7.4 (default, Aug 13 2019, 15:17:50) \
Type 'copyright', 'credits' or 'license' for more information\
IPython 7.11.1 -- An enhanced Interactive Python. Type '?' for help.\
\
\cf5 In [
\f1\b \cf6 1
\f0\b0 \cf5 ]: \cf2 new_new_dojo=Dojos.objects.create(name =\cf8 "plc 4 smartest ninjas"\cf2 , city = \cf8 "Sunnyvale"\cf2 , state = \cf8 "CA"\cf2 )                                                                                                  \
\cf9 ---------------------------------------------------------------------------\cf2 \
\cf9 NameError\cf2                                  Traceback (most recent call last)\
\cf4 <ipython-input-1-e3f3ddf9ae10>\cf2  in \cf3 <module>\cf2 \
\cf4 ----> 1\cf9  \cf2 new_new_dojo\cf10 =\cf2 Dojos\cf10 .\cf2 objects\cf10 .\cf2 create\cf10 (\cf2 name \cf10 ="plc 4 smartest ninjas",\cf2  city \cf10 =\cf2  \cf10 "Sunnyvale",\cf2  state \cf10 =\cf2  \cf10 "CA")\cf2 \
\
\cf9 NameError\cf2 : name 'Dojos' is not defined\
\
\cf5 In [
\f1\b \cf6 2
\f0\b0 \cf5 ]: 
\f1\b from
\f0\b0 \cf2  
\f1\b \cf7 dojo_ninjas_app.models
\f0\b0 \cf2  
\f1\b \cf5 import
\f0\b0 \cf2  *                                                                                                                                                                \
\
\cf5 In [
\f1\b \cf6 3
\f0\b0 \cf5 ]: \cf2 new_new_dojo=Dojos.objects.create(name =\cf8 "plc 4 smartest ninjas"\cf2 , city = \cf8 "Sunnyvale"\cf2 , state = \cf8 "CA"\cf2 )                                                                                                  \
\
\cf5 In [
\f1\b \cf6 4
\f0\b0 \cf5 ]: \cf2 Dojos.objects.all()                                                                                                                                                                                 \
\cf11 Out[
\f1\b \cf12 4
\f0\b0 \cf11 ]: \cf2 <QuerySet [<Dojos: Dojos object (7)>, <Dojos: Dojos object (8)>, <Dojos: Dojos object (9)>, <Dojos: Dojos object (10)>]>\
\
\cf5 In [
\f1\b \cf6 5
\f0\b0 \cf5 ]: \cf2                                                                                                                                                                                                     }